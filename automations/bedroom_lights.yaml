alias: Bedroom Lights
id: bedroom_lights
description: >
  Turn the bedroom lights on and off based on the room occupancy.

mode: queued

triggers:
  # Update lights when the room becomes occupied or unoccupied.
  - trigger: state
    entity_id: binary_sensor.bedroom_occupancy
    to:
      - 'on'
      - 'off'
  # Update lights at sunset and sunrise.
  - trigger: state
    entity_id: sun.sun
    to:
      - 'above_horizon'
      - 'below_horizon'
  # Update lights during the day based on the weather.
  - trigger: state
    entity_id: weather.home
    not_to: 'unavailable'
  # Turn lights on when we wake up, but not off because guests might have them
  # on (or HA restart). Don't turn lights off when we detect sleep either,
  # because that's just annoying.
  - trigger: state
    entity_id: binary_sensor.scotty_asleep
    to: 'off'
    id: 'on'
  # Turn lights off when the last person leaves home, but not on when anyone
  # comes home since we don't want lights to turn on based on false occupancy.
  - trigger: state
    entity_id: binary_sensor.anyone_home
    to: 'off'
    id: 'off'

variables:
  cloudy_day: >
    {{ states('weather.home') not in
       ['clear-night', 'partlycloudy', 'sunny', 'windy' ]
    }}

actions:
  - choose:
    # Turn lights on when the room is occupied at night.
    - conditions:
        - condition: state
          entity_id: binary_sensor.bedroom_occupancy
          state: 'on'
        - condition: state
          entity_id: sun.sun
          state: 'below_horizon'
        # Unless someone is sleeping.
        - condition: state
          entity_id: binary_sensor.scotty_asleep
          state: 'off'
        # Only when someone is home.
        - condition: state
          entity_id: binary_sensor.anyone_home
          state: 'on'
        # Excluding triggers that should only turn the lights off.
        - not:
            - condition: trigger
              id: 'off'
      sequence:
        - action: light.turn_on
          target:
            entity_id: light.bedroom

    # Turn lights on when the room is occupied during a cloudy day.
    - conditions:
        - condition: state
          entity_id: binary_sensor.bedroom_occupancy
          state: 'on'
        - condition: state
          entity_id: sun.sun
          state: 'above_horizon'
        - "{{ cloudy_day }}"
        # Unless someone is sleeping.
        - condition: state
          entity_id: binary_sensor.scotty_asleep
          state: 'off'
        # Only when someone is home.
        - condition: state
          entity_id: binary_sensor.anyone_home
          state: 'on'
        # Excluding triggers that should only turn the lights on.
        - not:
            - condition: trigger
              id: 'off'
      sequence:
        - action: light.turn_on
          target:
            entity_id: light.bedroom

    # Turn lights off when the sun comes out during the day to save on power.
    # Occupancy doesn't matter since we wouldn't turn lights on if it was.
    - conditions:
        - condition: state
          entity_id: sun.sun
          state: 'above_horizon'
        - "{{ not cloudy_day }}"
        # Unless we're playing.
        - condition: state
          entity_id: input_boolean.bedroom_play
          state: 'off'
        # Excluding triggers that should only turn the lights on.
        - not:
            - condition: trigger
              id: 'on'
      sequence:
        - action: light.turn_off
          target:
            entity_id: light.bedroom

    # Turn lights off when the room is unoccupied, or when nobody is home.
    - conditions:
        - or:
            - condition: state
              entity_id: binary_sensor.bedroom_occupancy
              state: 'off'
            - condition: state
              entity_id: binary_sensor.anyone_home
              state: 'off'
        # Unless we're playing.
        - condition: state
          entity_id: input_boolean.bedroom_play
          state: 'off'
        # Excluding triggers that should only turn the lights on.
        - not:
            - condition: trigger
              id: 'on'
      sequence:
        - action: light.turn_off
          target:
            entity_id: light.bedroom
