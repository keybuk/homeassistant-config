blueprint:
  name: Light Switch
  description: >
    Synchronize a light and a switch so that the switch appears to directly
    control the light; with the switch matching the state of the light
    if those are controlled directly.
  author: Scott James Remnant <scott@netsplit.com>
  domain: automation
  input:
    light:
      name: Light
      description: This light will be synchronized with the switch.
      selector:
        entity:
          filter:
            - domain: light
    switch:
      name: Switch
      description: This switch will be synchronized with the light.
      selector:
        entity:
          filter:
            - domain: switch

mode: queued

triggers:
  - trigger: state
    entity_id: !input light
    to:
      - "on"
      - "off"
    id: light
  - trigger: state
    entity_id: !input switch
    to:
      - "on"
      - "off"
    id: switch

variables:
  light: !input light
  switch: !input switch

actions:
  - choose:
      # When the light is the trigger, if the switch is not in the same state,
      # set it to the same state.
      - conditions:
          - condition: trigger
            id: light
          - "{{ not is_state(switch, trigger.to_state.state) }}"
        sequence:
          - action: |
              {% if trigger.to_state.state == 'on' %}
                switch.turn_on
              {% else %}
                switch.turn_off
              {% endif %}
            target:
              entity_id: !input switch

      # When the switch is the trigger, if the light is not in the same state,
      # set it to the same state.
      - conditions:
          - condition: trigger
            id: switch
          - "{{ not is_state(light, trigger.to_state.state) }}"
        sequence:
          - action: |
              {% if trigger.to_state.state == 'on' %}
                light.turn_on
              {% else %}
                light.turn_off
              {% endif %}
            target:
              entity_id: !input light
